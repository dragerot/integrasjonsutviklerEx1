package biz.ifint.no.webshop.fagsystem.service;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.0.5
 * 2016-09-01T02:19:26.775+02:00
 * Generated source version: 3.0.5
 * 
 */
@WebServiceClient(name = "FagSystemServiceService", 
                  wsdlLocation = "file:/C:/code/github/webshop-finnno/src/main/resources/wsdl/fagsystemintegrasjon_1.wsdl",
                  targetNamespace = "http://biz/ifint/no/webshop/fagsystem/service") 
public class FagSystemServiceService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://biz/ifint/no/webshop/fagsystem/service", "FagSystemServiceService");
    public final static QName Service = new QName("http://biz/ifint/no/webshop/fagsystem/service", "Service");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/code/github/webshop-finnno/src/main/resources/wsdl/fagsystemintegrasjon_1.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(FagSystemServiceService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/code/github/webshop-finnno/src/main/resources/wsdl/fagsystemintegrasjon_1.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public FagSystemServiceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public FagSystemServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FagSystemServiceService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns FagSystemService
     */
    @WebEndpoint(name = "Service")
    public FagSystemService getService() {
        return super.getPort(Service, FagSystemService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FagSystemService
     */
    @WebEndpoint(name = "Service")
    public FagSystemService getService(WebServiceFeature... features) {
        return super.getPort(Service, FagSystemService.class, features);
    }

}
